#!/bin/sh

usage() {
  echo "Usage: $0 { on | off | reset | id | listen | log | kill }"
}

on() {
  echo 1 >/sys/class/gpio/gpio8/value
}

off() {
  echo 0 >/sys/class/gpio/gpio8/value
}

log() {
  cat /tmp/bell.log
}

beep() {
  on
  sleep 1
  off
}

id() {
  cat /root/id
}

reset() {
  echo reset id
  rm /root/id
  beep
}

kill() {
  echo kill
  killall -9 nc
  killall -9 bell
}

listen() {
  bell off
#  mkfifo /tmp/srv-input
#  cat > /tmp/srv-input &

  if [ ! -f /root/learn ] && [ ! -f /root/id ] ; then
    touch /root/learn
    killall -9 nc
    beep
  fi

  while :
  do
    #echo "sending info..."
    #ifconfig br-lan | grep 'inet addr:' | cut -d: -f2 |  awk '{ print $1}' > /tmp/bellinfo
    #cat /root/id >> /tmp/bellinfo
    #sed -e 's/^/BELL: /' /tmp/bellinfo | nc bel.vcxl.nl 8080

    echo "listening..."
    ncat --idle-timeout 60 --recv-only bel.vcxl.nl 8080 | while read line
    do
      echo "read line: $line"
      if [ -f /root/learn ] ; then
        echo "$line" >> /root/id
        rm /root/learn
        beep
      fi

      grep -q /root/id -e "$line"
      if [ $? -eq 0 ] ; then
        echo "found: $line"
        on
      fi

      if [ "$line" = "off" ] ; then
        off
      fi

      if [ "$line" = "update" ] ; then
        echo "updating package..."
        opkg install http://bel.vcxl.nl/bell-latest.ipk &
        beep
        exit
      fi

    done
    echo "connection closed"
    echo "waiting to reconnect"
    sleep 5
  done
}


if [ $# -eq 0 ] ; then
  usage
elif [ $1 = "on" ] ; then
  on
elif [ $1 = "off" ] ; then
  off
elif [ $1 = "id" ] ; then
  id
elif [ $1 = "reset" ] ; then
  reset
elif [ $1 = "listen" ] ; then
  listen
elif [ $1 = "log" ] ; then
  log
elif [ $1 = "kill" ] ; then
  kill
else
  usage
fi